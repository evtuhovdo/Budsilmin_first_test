<?php

namespace Budsilnum;

use \InvalidArgumentException;
use vermotr\Math\Matrix;

class ResultCalculator {
    const ALLOWED_TEST_VALUES = [0, 1];

    private $sportPointMatrix = [
        //Академическая гребля
        [-10, 0, -10, -30, -20, 0, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, 0, -30, 0, 0],
        //Автоспорт
        [-10, -10, 0, 0, 0, 0, 0, 0, 0, -10, 0, -10, -30, -20, 0, 0, 0, 0, -30, -20, 0, -30, -20, 0, 0, -30, 0, 0, 0],
        //Бадминтон
        [0, -30, -30, 0, 0, 0, -30, -20, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Баскетбол
        [0, -30, -30, 0, 0, -10, -10, -10, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -10, -10, 0, 0, 0, -30, 0, 0],
        //Биатлон
        [0, 0, 0, 0, -20, -30, -30, -20, 0, -10, 0, -10, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Бобслей
        [-10, 0, -10, -30, -20, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, -30, -30, 0, 0],
        //Бокс
        [0, 0, 0, 0, 0, -10, -10, -10, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Борьба вольная
        [0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, -30, -20, 0, -30, -20, 0, 0, -30, 0, 0, 0],
        //Борьба греко-римская
        [0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, 0, -30, 0, 0, 0],
        //Вело спорт шорт трек
        [0, 0, 0, -30, -20, 0, -10, -10, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30],
        //Вело спорт кросс
        [0, 0, 0, 0, -20, -30, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30],
        //Вело спорт кросс кантри
        [-10, -10, 0, 0, -20, -30, -10, -10, 0, -10, 0, -10, -10, -10, 0, 0, 0, 0, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0, -30],
        //Водное поло
        [0, -30, -30, 0, 0, -10, -30, -20, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Воллейбол
        [0, -30, -30, -10, 0, 0, 0, 0, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -10, -10, 0, 0, 0, -30, 0, 0],
        //Гандбол
        [0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Гимнастика
        [-10, -10, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, 0, -30, -20, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, -30],
        //Гиревой спорт
        [-10, 0, -10, 0, -20, -30, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Горнолыжный спорт слалом
        [0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, -10, -30, -20, 0, 0, 0, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Гребля на байдарках/каноэ
        [-10, 0, -10, -30, -20, 0, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Дзюдо
        [0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Карате
        [0, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Керлинг
        [0, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Кикбоксинг
        [0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Конный спорт
        [-10, -10, 0, 0, 0, 0, 0, 0, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Конькобежный спорт спринт
        [-10, 0, -10, -30, -20, 0, -10, -10, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Конькобежный спорт стайер
        [-10, -10, 0, 0, -20, -30, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Легкая атлетика спринт
        [0, -10, -10, -30, -20, 0, 0, 0, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //легкая атлетика стайер
        [-10, -10, 0, 0, -20, -30, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Метания (молот, ядра, и тд)
        [-10, 0, -10, -30, -20, 0, 0, 0, 0, -10, 0, -10, 0, 0, 0, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0],
        //Прыжки в длину / высоту
        [0, 0, 0, -30, -20, 0, 0, 0, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Лыжный гонки
        [0, 0, 0, 0, -20, -30, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Мини футбол
        [0, 0, 0, 0, -20, -30, -30, -20, 0, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Мото спорт
        [0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, -30, -20, 0, 0, 0, 0, 0, -30, 0, 0, 0],
        //Настольный теннис
        [-10, -10, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, 0, 0, 0, 0, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Парусный спорт
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0, 0],
        //Пауэрлифтинг
        [-10, 0, -10, -30, -20, 0, 0, 0, 0, -10, 0, -10, -10, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Плавание спринт
        [0, -30, -30, -30, -20, 0, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0],
        //плавание стайэр
        [0, -30, -30, 0, -20, -30, -30, -20, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -30, 0, 0],
        //Прыжки в воду
        [-10, -10, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, -10, -10, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, 0, -30],
        //Регби
        [0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Самбо
        [0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Санный спорт
        [-10, -10, 0, 0, 0, 0, 0, 0, 0, -10, 0, -10, -10, -10, 0, 0, 0, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Синхронное плавание
        [0, -30, -30, 0, -20, -30, -30, -20, 0, 0, -10, -10, 0, 0, 0, -10, -10, 0, 0, 0, 0, -30, -20, 0, -30, 0, 0, 0, 0],
        //Сноуборд кросс
        [0, 0, 0, -10, 0, 0, 0, 0, 0, -10, 0, -10, 0, 0, 0, 0, 0, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, -30],
        //Сноуборд фристайл
        [-10, -10, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, -30, -20, 0, 0, 0, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, -30],
        //Современное пятиборье
        [0, -10, -10, 0, -20, -30, -30, -20, 0, -10, 0, -10, -30, -20, 0, -10, -10, 0, -10, -10, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Стрелковый спорт
        [0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, -10, -10, -10, 0, 0, 0, 0, -30, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Теннис
        [0, 0, 0, -10, 0, 0, -30, -20, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Тяжелая атлетика
        [-10, 0, -10, -30, -20, 0, 0, 0, 0, -10, 0, -10, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Фигурное катание
        [-10, -10, 0, -10, 0, 0, -10, -10, 0, 0, -10, -10, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, 0, 0, 0, 0, -30],
        //Фехтование
        [0, -10, -10, -10, 0, 0, 0, 0, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, 0, 0, 0, -30, 20, 0, 0, 0, 0, 0, 0],
        //Футбол
        [0, 0, 0, 0, -20, -30, -30, -20, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -10, -10, 0, 0, 0, 0, 0, 0],
        //Худ. Гимнастика
        [-10, -10, 0, 0, 0, 0, 0, 0, 0, 0, -10, -10, 0, 0, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -30, 0, 0, 0, 0],
        //Хоккей
        [0, 0, 0, 0, 0, 0, -10, -10, 0, -10, -10, 0, -30, -20, 0, 0, 0, 0, -30, -20, 0, -30, -20, 0, 0, 0, 0, 0, 0],
        //Шахматы
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        //Шашки
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ];

    public function getMatrixResult(array $testPoints) {
        if (count($testPoints) !== 29) {
            throw new InvalidArgumentException("Результат тестов должен быть массивом размерности 29.");
        }

        foreach ($testPoints as $testPoint) {
            if (count($testPoints) !== 1) {
                throw new InvalidArgumentException("Результат единичного теста должен быть массивом размерности 1.");
            }

            if(!in_array($testPoints, self::ALLOWED_TEST_VALUES)) {
                throw new InvalidArgumentException("Значение результат единичного теста должен быть значением 0 или 1.");
            }
        }

        $matrix1 = new Matrix($this->sportPointMatrix);
        $matrix2 = new Matrix($testPoints);

        return $matrix1->multiply($matrix2);
    }
}

//
//
//$testPoints = [
//    [0],
//    [0],
//    [1],
//
//    [0],
//    [0],
//    [1],
//
//    [0],
//    [0],
//    [1],
//
//    [0],
//    [0],
//    [1],
//
//    [0],
//    [0],
//    [1],
//
//    [0],
//    [0],
//    [1],
//
//    [0],
//    [0],
//    [1],
//
//    [0],
//    [0],
//    [1],
//
//    [0],
//    [0],
//
//    [1],
//    [0],
//    [1],
//];
//
//// With a bi-dimensional array
//$matrix1 = new Matrix($sportPointMatrix);
//$matrix2 = new Matrix($testPoints);
////var_dump($matrix3);
//$res = $matrix1->multiply($matrix2);
//
//var_dump($res);

//$result = matrixmult($sportPointMatrix, $testPoints);
//
//
//print_r($result);
